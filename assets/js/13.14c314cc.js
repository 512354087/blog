(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{651:function(s,n,a){"use strict";a.r(n);var e=a(76),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"css-属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css-属性"}},[s._v("#")]),s._v(" css 属性")]),s._v(" "),n("p",[s._v("absolute ['æbsəlu:t] 绝对的，完全的")]),s._v(" "),n("p",[s._v("cursor ['kə:sə] 鼠标指针")]),s._v(" "),n("p",[s._v("dashed [dæʃt] 虚线 CSS 边框常用的一种")]),s._v(" "),n("p",[s._v("horizontal [,hɔri'zɔntl] 水平的")]),s._v(" "),n("p",[s._v("indent [in'dent] 缩进")]),s._v(" "),n("p",[s._v("justify ['dʒʌstifai] 两端对齐")]),s._v(" "),n("p",[s._v("position [pə'ziʃən] 定位，位置")]),s._v(" "),n("p",[s._v("relative ['relətiv] 相对的")]),s._v(" "),n("p",[s._v("row [rəu] 行")]),s._v(" "),n("p",[s._v("transitional [træn'ziʃənəl] 过渡的")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\nposition：relitive absolute\nflex-direction: row column\njustify-content: space-between  space-around\nalign-items:\ntransform: translate rotate scale\ntext-overflow: ellipsis\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"git-操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git-操作"}},[s._v("#")]),s._v(" git 操作")]),s._v(" "),n("p",[n("a",{attrs:{href:"http://donglistar.gitee.io/blog/tool/gitchang-yong-ming-ling.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("git 操作"),n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"js-原型（prototype）和原型链（prototype-chain）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js-原型（prototype）和原型链（prototype-chain）"}},[s._v("#")]),s._v(" js 原型（prototype）和原型链（prototype chain）")]),s._v(" "),n("ul",[n("li",[s._v("所有的对象都是通过 new 函数创建的，且所有的对象都是引用类型")]),s._v(" "),n("li",[s._v("所有的函数也都是对象，都是通过 new Function 创建的（可以称为函数对象）")]),s._v(" "),n("li",[s._v("Function 函数是 JS 内置的，不需要创建！")]),s._v(" "),n("li",[s._v("原型 prototype")])]),s._v(" "),n("ul",[n("li",[s._v("所有的函数都有一个属性叫 prototype，称之为函数原")]),s._v(" "),n("li",[s._v("默认情况下，prototype 是一个普通的 object 对象")]),s._v(" "),n("li",[s._v("默认情况下，prototype 中有一个属性叫 constructor，它也是一个对象，它指向构造函数本身")])]),s._v(" "),n("ul",[n("li",[s._v("隐式原型"),n("strong",[s._v("proto")])])]),s._v(" "),n("ul",[n("li",[s._v("所有的对象都有一个属性叫"),n("strong",[s._v("proto")]),s._v("，称之为隐式原型")]),s._v(" "),n("li",[s._v("默认情况下，"),n("strong",[s._v("proto")]),s._v("指向创建该对象的函数的原型，即 prototype")])]),s._v(" "),n("ul",[n("li",[s._v("原型链 prototype chain\n到重点了，上面讲了原型和隐式原型，估计有的人会问：搞这么麻烦，它们有什么用呢？")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function User(name) {\n  this.name = name;\n  this.sayHello = function () {\n    console.log(`hello，${this.name}`);\n  };\n};\n\nvar user1 = new User('zhangsan');\nvar user2 = new User('lisi');\n\nuser1.sayHello(); // hello，zhangsan\nuser2.sayHello(); // hello，lisi\n\nconsole.log(user1.sayHello === user2.sayHello) // false\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("如上代码，我通过构造函数 User 实例化了两个对象 user1 和 user2，因为它们都有各自属性和方法，所以 user1 和 user2 的 sayHello 方法是不相等的。\n但是我们可以发现，它们的方法其实是一样的，完全没必要创建多次。可以假设一下，如果我们创建了很多个示例，那么这样就会浪费内存空间。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function User(name) {\n  this.name = name;\n};\n\nUser.prototype.sayHello = function () {\n  console.log(`hello，${this.name}`);\n};\n\nvar user1 = new User('zhangsan');\nvar user2 = new User('lisi');\n\nuser1.sayHello(); // hello，zhangsan\nuser2.sayHello(); // hello，lisi\n\nconsole.log(user1.sayHello === user2.sayHello) // true\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/7223402434960588861?searchId=20231017221218BC482238F95CB731243A",target:"_blank",rel:"noopener noreferrer"}},[s._v("疑问彻底搞懂 JS 原型 原型链"),n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"js-作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js-作用域"}},[s._v("#")]),s._v(" js 作用域")]),s._v(" "),n("p",[s._v("在 JS 中分为作用域分三种：")]),s._v(" "),n("ul",[n("li",[s._v("全局作用域 (最外层变量以及函数。不使用 var 声明的变量(隐式全局变量)。window 对象所有属性和函数拥有全局作用域)")]),s._v(" "),n("li",[s._v("函数作用域 (内部定义的变量，拥有函数作用域)")]),s._v(" "),n("li",[s._v("块作用域 (使用 let 或 const 声明的变量，如果被一个大括号括住，那么这个大括号括住的变量就形成了一个块级作用域。)")])]),s._v(" "),n("ul",[n("li",[s._v("在 JS 中有两个函数来实现这个目的，分别是 eval 和 with")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('  function f1(str){\n    eval(str);\n    console.log(num);\n  }\n\n  var num = 10;\n  var str ="var num = 20"\n  f1(str)\n\n\neval函数入参是一个字符串。当eval拿到一个字符串入参后，它会把这段字符串的内容当做js代码（不管它是不是一段代码），插入到自己被调用的那个位置\n\n\nfunction f1(str){\n    var num =20\n    console.log(num);\n  }\n\n  var num = 10;\n  f1(str)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("ul",[n("li",[s._v("with 函数是引用对象的一种简写方式。当我们去引用一个对象中的多个属性时，可不用重复引用对象本身。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  var obj={\n    a:1\n  }\n\n // 打印属性\n console.log(obj.a);\n\n // 使用with简写\n with(obj){\n     console.log(a);\n }\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h2",{attrs:{id:"dom-事件传播"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-事件传播"}},[s._v("#")]),s._v(" DOM 事件传播")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/7157116905298329608?searchId=20231017223933000F3DD1A384B4372F2C",target:"_blank",rel:"noopener noreferrer"}},[s._v("今天聊聊 DOM 事件的传播机制"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"防抖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#防抖"}},[s._v("#")]),s._v(" 防抖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function debounce (fn, delay) {\n  let timer;\n  return function (...args) {\n    // 清除原来的再添加一个\n    if (timer) {\n      clearTimeout(timer)\n    }\n    timer = setTimeout(() => {\n      fn.apply(this, args)\n    }, delay)\n  }\n\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"节流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#节流"}},[s._v("#")]),s._v(" 节流")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function throttle (fn, delay) {\n  let last = 0 // 上次触发时间\n  return function (...args) {\n    const now = Date.now()\n    if (now - last > delay) {\n      last = now\n      fn.apply(this, args)\n    }\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"深拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝"}},[s._v("#")]),s._v(" 深拷贝")]),s._v(" "),n("ul",[n("li",[s._v("方式一")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 不支持值为undefined、函数和循环引用的情况\nconst cloneObject = JSON.parse(JSON.stringify(obj))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("递归拷贝")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function deepClone (obj, cache = new WeakMap()) {\n  if (obj === null || typeof obj !== 'object') return obj\n  if (obj instanceof Date) return new Date(obj)\n  if (obj instanceof RegExp) return new RegExp(obj)\n  if (cache.has(obj)) return cache.get(obj) // 如果出现循环引用，则返回缓存的对象，防止递归进入死循环\n  let cloneObj = new obj.constructor() // 使用对象所属的构造函数创建一个新对象\n  cache.set(obj, cloneObj) // 缓存对象，用于循环引用的情况\n  for (let key in obj) {\n    // 判断对象是否为原生属性\n    if (obj.hasOwnProperty(key)) {\n      cloneObj[key] = deepClone(obj[key], cache) // 递归拷贝\n    }\n  }\n  return cloneObj\n}\n\n// 测试\nconst obj = { name: 'Jack', address: { x: 100, y: 200 } }\nobj.a = obj // 循环引用\nconst newObj = deepClone(obj)\nconsole.log(newObj.address === obj.address)   // false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h3",{attrs:{id:"手写-promise"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手写-promise"}},[s._v("#")]),s._v(" 手写 promise")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class myPromise {\n  constructor(executor) {\n    this.status = 'pending' // 初始状态为等待\n    this.value = null // 成功的值\n    this.reason = null // 失败的原因\n    this.onFulfilledCallbacks = [] // 成功的回调函数数组\n    this.onRejectedCallbacks = [] // 失败的回调函数数组\n    let reslove = value => {\n      if(this.status === 'pending'){\n        this.status = 'fulfilled'\n        this.value = value;\n        this.onFulfilledCallbacks.forEach(fn => fn()) // 调用成功的回调函数\n      }\n    }\n\n    let reject = reason =>{\n      if (this.status === 'pending') {\n        this.status = 'rejected'\n        this.reason = reason\n        this.onRejectedCallbacks.forEach(fn => fn()) // 调用失败的回调函数\n      }\n    }\n\n    try {\n      executor(resolve, reject)\n    } catch (err) {\n      reject(err)\n    }\n\n  }\n\n  then(onFulfilled, onRejected) {\n    return new MyPromise((resolve, reject) => {\n       if(this.status === 'fulfilled'){\n        setTimeout(() => {\n          const x = onFulfilled(this.value);\n          x instanceof MyPromise ? x.then(resolve, reject) : resolve(x)\n        })\n       }\n       if(this.status === 'rejected'){\n        setTimeout(() => {\n          const x = onRejected(this.reason)\n          x instanceof MyPromise ? x.then(resolve, reject) : resolve(x)\n        })\n\n      }\n      if (this.status === 'pending') {\n        this.onFulfilledCallbacks.push(() => { // 将成功的回调函数放入成功数组\n          setTimeout(() => {\n            const x = onFulfilled(this.value)\n            x instanceof MyPromise ? x.then(resolve, reject) : resolve(x)\n          })\n        })\n        this.onRejectedCallbacks.push(() => { // 将失败的回调函数放入失败数组\n          setTimeout(() => {\n            const x = onRejected(this.reason)\n            x instanceof MyPromise ? x.then(resolve, reject) : resolve(x)\n          })\n        })\n      }\n    })\n  }\n}\n\n\n// 测试\nfunction p1() {\n  return new MyPromise((resolve, reject) => {\n    setTimeout(resolve, 1000, 1)\n  })\n}\nfunction p2() {\n  return new MyPromise((resolve, reject) => {\n    setTimeout(resolve, 1000, 2)\n  })\n}\n\np1().then(res => {\n  console.log(res) // 1\n  return p2()\n}).then(ret => {\n  console.log(ret) // 2\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br")])]),n("h2",{attrs:{id:"附加篇"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#附加篇"}},[s._v("#")]),s._v(" 附加篇")]),s._v(" "),n("p",[s._v("1.实现一个 compose 函数\ncompose 是组合的意思，它的作用故名思议就是将多个函数组合起来调用。")]),s._v(" "),n("p",[s._v("我们可以把 compose 理解为了方便我们连续执行方法，把自己调用传值的过程封装了起来，我们只需要给 compose 函数我们要执行哪些方法，他会自动的执行。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" const add1 = (num) => {\n  return num + 1\n }\n\n const mul5 = (num) => {\n  return num * 5;\n  };\n\nconst sub8 = (num) => {\n  return num - 8;\n};\n\n\n/*\n *  //  reduceRight 与 reduce 用法相同  不同的是reduceRight 是从末尾开始累加\n *  array.reduceRight(function(total, currentValue, currentIndex, arr), initialValue)\n *\n */\nconst compose = function (...args) {\n  return function (num) {\n    return args.reduceRight((res, cb) => cb(res), num);\n  };\n}\n\n\nconsole.log(compose(sub8, mul5, add1)(1));  // 2\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v("实现一个 pipe 函数\npipe 函数和 compose 函数功能一样，只不过是从左往右执行顺序,只用将上面 reduceRight 方法改为 reduce 即可")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const add1 = (num) => {\n  return num + 1;\n};\n\nconst mul5 = (num) => {\n  return num * 5;\n};\n\nconst sub8 = (num) => {\n  return num - 8;\n};\n\nconst compose = function (...args) {\n  return function (num) {\n    return args.reduce((res, cb) => cb(res), num);\n  };\n};\nconsole.log(compose(sub8, mul5, add1)(1)); // -34\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("ol",{attrs:{start:"3"}},[n("li",[s._v("实现一个 forEach 函数\nforEach() 方法能对数组的每个元素执行一次给定的函数。\n需要注意的点有，\n挂载到 Array 的原型上\n具有 callBackFn, thisArg 两个参数\ncallBackFn 是一个函数， 且具有三个参数\n返回 undefined")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('\narray.prototype.myForEach = function (callBackFn, thisArg) {\n  if (typeof callBackFn !== "function") {\n    throw new Error("callBackFn must be function");\n  }\n\n  thisArg = thisArg || this;\n  const len = this.length;\n  for (let i = 0; i < len; i++) {\n    callBackFn.call(thisArg, this[i], i, this);\n  }\n};\n\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h2",{attrs:{id:"内存泄漏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏"}},[s._v("#")]),s._v(" 内存泄漏")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("哪些情况会引起内存泄漏？")])]),s._v(" "),n("li",[n("p",[s._v("意外的全局变量")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function foo(arg) {\n    bar = "this is a hidden global variable";\n}\nbar没被声明,会变成一个全局变量,在页面关闭之前不会被释放。\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("另一种意外的全局变量可能由 this 创建:")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function foo() {\n    this.variable = "potential accidental global";\n}\n// foo 调用自己，this 指向了全局对象（window）\nfoo();\n\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("在 JavaScript 文件头部加上 'use strict'，可以避免此类错误发生。启用严格模式解析 JavaScript ，避免意外的全局变量。")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("被遗忘的计时器或回调函数")])]),s._v(" "),n("li",[n("p",[s._v("闭包")])]),s._v(" "),n("li",[n("p",[s._v("没有清理的 DOM 元素引用")])])]),s._v(" "),n("h3",{attrs:{id:"垃圾回收的使用场景优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收的使用场景优化"}},[s._v("#")]),s._v(" 垃圾回收的使用场景优化")]),s._v(" "),n("p",[s._v("1.数组 array 优化")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("将[]赋值给一个数组对象，是清空数组的捷径(例如： arr = [];),但是需要注意的是，这种方式又创建了一个新的空对象，并且将原来的数组对象变成了一小片内存垃圾！实际上，将数组长度赋值为0（arr.length = 0）也能达到清空数组的目的，并且同时能实现数组重用，减少内存垃圾的产生。\n\n\nconst arr = [1, 2, 3, 4];\nconsole.log('浪里行舟');\narr.length = 0  // 可以直接让数字清空，而且数组类型不变。\n// arr = []; 虽然让a变量成一个空数组,但是在堆上重新申请了一个空数组对象。\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("2.对象尽量复用")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("对象尽量复用，尤其是在循环等地方出现创建新对象，能复用就复用。不用的对象，尽可能设置为null，尽快被垃圾回收掉。\nvar t = {} // 每次循环都会创建一个新对象。\nfor (var i = 0; i < 10; i++) {\n  // var t = {};// 每次循环都会创建一个新对象。\n  t.age = 19\n  t.name = '123'\n  t.index = i\n  console.log(t)\n}\nt = null //对象如果已经不用了，那就立即设置为null；等待垃圾回收。\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("3.在循环中的函数表达式，能复用最好放到循环外面")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 在循环中最好也别使用函数表达式。\nfor (var k = 0; k < 10; k++) {\n  var t = function(a) {\n    // 创建了10次  函数对象。\n    console.log(a)\n  }\n  t(k)\n}\n\n\n\n// 推荐用法\nfunction t(a) {\n  console.log(a)\n}\nfor (var k = 0; k < 10; k++) {\n  t(k)\n}\nt = null\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h2",{attrs:{id:"webpack-操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-操作"}},[s._v("#")]),s._v(" webpack 操作")]),s._v(" "),n("ul",[n("li",[s._v("webpack 一切皆模块\n"),n("a",{attrs:{href:"https://juejin.cn/post/7196630860811075642?searchId=202310181706392506DAC831F1FAB421CA",target:"_blank",rel:"noopener noreferrer"}},[s._v("2023 前端面试系列"),n("OutboundLink")],1)])]),s._v(" "),n("h2",{attrs:{id:"跨域-浏览器同源策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨域-浏览器同源策略"}},[s._v("#")]),s._v(" 跨域(浏览器同源策略)")]),s._v(" "),n("p",[s._v("1.JSONP")]),s._v(" "),n("p",[s._v("原理：通过 script 标签没有跨域限制的特性，进行资源的请求和获取。")]),s._v(" "),n("p",[s._v("限制：需要目标服务器进行配合，且仅支持 get 请求")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<script>\n\nwindow.jsonp = function(res){\n\nconsole.log(res);\n\n}\n\n<\/script>\n\n<script src="http://localhost:9527/jsonp?val=123&cb=jsonp"><\/script>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("2.CORS")]),s._v(" "),n("p",[s._v("3.服务器代理 (如:nginx 代理)")]),s._v(" "),n("h2",{attrs:{id:"性能优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[s._v("#")]),s._v(" 性能优化")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("减少 http 请求")])]),s._v(" "),n("li",[n("p",[s._v("使用字体图标 iconfont 代替图片图标")])]),s._v(" "),n("li",[n("p",[s._v("善用缓存，不重复加载相同的资源")])]),s._v(" "),n("li",[n("p",[s._v("压缩文件")])]),s._v(" "),n("li",[n("p",[s._v("通过 webpack 按需加载代码，提取第三库代码，减少 ES6 转为 ES5 的冗余代码")])]),s._v(" "),n("li",[n("p",[s._v("减少重绘重排")])]),s._v(" "),n("li",[n("p",[s._v("使用事件委托")])]),s._v(" "),n("li",[n("p",[s._v("使用 requestAnimationFrame 来实现视觉变化")])]),s._v(" "),n("li",[n("p",[s._v("使用 css 动画 减少 js 动画")])]),s._v(" "),n("li",[n("p",[s._v("骨架评 图片懒加载")])]),s._v(" "),n("li",[n("p",[s._v("接口数据量大滑动加载")])])])])}),[],!1,null,null,null);n.default=t.exports}}]);