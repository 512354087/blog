(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{648:function(n,s,a){"use strict";a.r(s);var e=a(76),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"_1-链表的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-链表的定义"}},[n._v("#")]),n._v(" 1. 链表的定义")]),n._v(" "),s("p",[n._v("链表结构其实是内存内部的一种存储方式，链表则是把一系列节点串联起来，每个节点上至少包含两个部分： 数据域 与 指针域")]),n._v(" "),s("p",[n._v("数据：保存数据")]),n._v(" "),s("p",[n._v("指针：指向下一个节点的引用")]),n._v(" "),s("p",[n._v("链表中的每个节点，通过指针域的值，形成一个线性结构")]),n._v(" "),s("h2",{attrs:{id:"_2-链表的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-链表的优缺点"}},[n._v("#")]),n._v(" 2. 链表的优缺点")]),n._v(" "),s("p",[n._v("因为链表是一种 松散 的结构体，所以当你想要找到其中的某一个节点时，只能够从 头节点 一级一级的往下找，但也因为这种松散的结构使得其进行 插入 和 删除 时只需要改变其 指针域 的指向即可\n优点：适合动态插入和删除的应用场景 缺点：不能快速的定位和随机访问数据")]),n._v(" "),s("h3",{attrs:{id:"数组和链表的对比总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组和链表的对比总结"}},[n._v("#")]),n._v(" 数组和链表的对比总结")]),n._v(" "),s("ul",[s("li",[n._v("数组和链表都是线性数据结构")]),n._v(" "),s("li",[n._v("数组为静态结构，静态分配内存。链表支持动态分配内存")]),n._v(" "),s("li",[n._v("数组在数据储存时是一段连续的内存空间，链表是非连续的通过指针来串联")]),n._v(" "),s("li",[n._v("数组可以根据下标定位快速查找，链表则需要遍历查找")]),n._v(" "),s("li",[n._v("数组在插入和删除时会有大量的数据移动补位，链表只需要改变指针指向")])]),n._v(" "),s("h2",{attrs:{id:"js-中链表的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-中链表的实现"}},[n._v("#")]),n._v(" js 中链表的实现")]),n._v(" "),s("ul",[s("li",[n._v("单向链表：线型数据结构，指针指向下一个节点，终点指向 null")]),n._v(" "),s("li",[n._v("双向链表：可以往前或者往后添加节点，指针指向前一个节点和后一个节点")]),n._v(" "),s("li",[n._v("循环链表：循环链表的第一个节点指向最后一个节点，最后一个节点指向第一个节点（循环链表又可以划分为“单向循环链表”和“双向循环链表”）")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("class neNode {\n  constructor(data) {\n    this.data = data;\n    this.next = null;\n  }\n}\n\n// 实现一个单项链表\nclass singleLinkedList {\n  constructor() {\n    this.head = null;\n  }\n  // 添加节点\n  add(data) {\n    let node = new neNode(data);\n    if (this.head === null) {\n      this.head = node;\n    } else {\n      let current = this.head;\n      while (current.next) {\n        current = current.next;\n      }\n      current.next = node;\n    }\n  }\n  // 插入节点\n  insert(data, target) {\n    let node = new neNode(data);\n    let current = this.head;\n    while (current.next) {\n      if (current.data === target) {\n        node.next = current.next;\n        current.next = node;\n        break;\n      }\n      current = current.next;\n    }\n  }\n  // 查找节点\n  find(data) {\n    let current = this.head;\n    while (current) {\n      if (current.data === data) {\n        return current;\n      }\n      current = current.next;\n    }\n    return null;\n  }\n  // 删除节点\n  remove(data) {\n    let current = this.head;\n    let previous = null;\n    while (current) {\n      if (current.data === data) {\n        if (previous === null) {\n          this.head = current.next;\n        } else {\n          previous.next = current.next;\n        }\n        return true;\n      }\n      previous = current;\n      current = current.next;\n    }\n    return false;\n  }\n}\nconst list = new singleLinkedList();\nlist.add(1);\nlist.add(2);\nlist.add(3);\nlist.insert(4, 2);\nconsole.dir(list, { depth: null });\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br")])]),s("h2",{attrs:{id:"js-中的数据类型检测方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-中的数据类型检测方案"}},[n._v("#")]),n._v(" JS 中的数据类型检测方案")]),n._v(" "),s("ol",[s("li",[n._v("typeof")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("console.log(typeof 1) // number\nconsole.log(typeof true) // boolean\nconsole.log(typeof 'mc');            // string\nconsole.log(typeof Symbol)           // function\nconsole.log(typeof Symbol());        // symbol\nconsole.log(typeof function(){});    // function\nconsole.log(typeof console.log());   // undefined\nconsole.log(typeof []);              // object\nconsole.log(typeof {});              // object\nconsole.log(typeof null);            // object\nconsole.log(typeof undefined);       // undefined\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br")])]),s("p",[n._v("优点：能够快速区分基本数据类型")]),n._v(" "),s("p",[n._v("缺点：不能将 Object、Array 和 Null 区分，都返回 object")]),n._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[n._v("instanceof")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("console.log(1 instanceof Number);                    // false\nconsole.log(true instanceof Boolean);                // false\nconsole.log('str' instanceof String);                // false\nconsole.log([] instanceof Array);                    // true\nconsole.log(function(){} instanceof Function);       // true\nconsole.log({} instanceof Object);                   // true\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br")])]),s("p",[n._v("优点：能够区分 Array、Object 和 Function，适合用于判断自定义的类实例对象")]),n._v(" "),s("p",[n._v("缺点：Number，Boolean，String 基本数据类型不能判断")]),n._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[n._v("Object.prototype.toString.call()")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("console.log(toString.call(1));                      //[object Number]\nconsole.log(toString.call(true));                   //[object Boolean]\nconsole.log(toString.call('mc'));                   //[object String]\nconsole.log(toString.call([]));                     //[object Array]\nconsole.log(toString.call({}));                     //[object Object]\nconsole.log(toString.call(function(){}));           //[object Function]\nconsole.log(toString.call(undefined));              //[object Undefined]\nconsole.log(toString.call(null));                   //[object Null]\n\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br")])]),s("p",[n._v("优点：精准判断数据类型")]),n._v(" "),s("p",[n._v("缺点：写法繁琐不容易记，推荐进行封装后使用")])])}),[],!1,null,null,null);s.default=t.exports}}]);