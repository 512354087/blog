(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{649:function(n,s,a){"use strict";a.r(s);var e=a(76),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h3",{attrs:{id:"原文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原文"}},[n._v("#")]),n._v(" 原文")]),n._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6844903496253177863",target:"_blank",rel:"noopener noreferrer"}},[n._v("this call bind apply"),s("OutboundLink")],1)]),n._v(" "),s("h3",{attrs:{id:"this-指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this-指向"}},[n._v("#")]),n._v(" this 指向")]),n._v(" "),s("p",[n._v("在 ES5 中，其实 this 的指向，始终坚持一个原理：this 永远指向最后调用它的那个对象，来，跟着我朗读三遍："),s("b",[n._v("this 永远指向最后调用它的那个对象")]),n._v("，"),s("b",[n._v("this 永远指向最后调用它的那个对象")]),n._v("，"),s("b",[n._v("this 永远指向最后调用它的那个对象")]),n._v("。记住这句话，this 你已经了解一半了。")]),n._v(" "),s("ol",[s("li",[n._v("例一")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('  var name = "windowsName";\n  function a() {\n      var name = "Cherry";\n\n      console.log(this.name);          // windowsName\n\n      console.log("inner:" + this);    // inner: Window\n  }\n  a();\n  console.log("outer:" + this)         // outer: Window\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br")])]),s("p",[n._v("这个相信大家都知道为什么 log 的是 windowsName，因为根据刚刚的那句话“this 永远指向最后调用它的那个对象”，我们看最后调用 a 的地方 a();，前面没有调用的对象那么就是全局对象 window，这就相当于是 window.a()；注意，这里我们没有使用严格模式，如果使用严格模式的话，全局对象就是 undefined，那么就会报错 Uncaught TypeError: Cannot read property 'name' of undefined。")]),n._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[n._v("例二")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('  var name = "windowsName";\n    var a = {\n        name: "Cherry",\n        fn : function () {\n            console.log(this.name);      // Cherry\n        }\n    }\n    a.fn();\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br")])]),s("p",[n._v("在这个例子中，函数 fn 是对象 a 调用的，所以打印的值就是 a 中的 name 的值。")]),n._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[n._v("例三")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('var name = "windowsName";\n    var a = {\n        name: "Cherry",\n        fn : function () {\n            console.log(this.name);      // Cherry\n        }\n    }\n window.a.fn();\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br")])]),s("p",[n._v("这里打印 Cherry 的原因也是因为刚刚那句话“this 永远指向最后调用它的那个对象”，最后调用它的对象仍然是对象 a。")]),n._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[n._v("例 4")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('  var name = "windowsName";\n    var a = {\n        // name: "Cherry",\n        fn : function () {\n            console.log(this.name);      // undefined\n        }\n    }\n    window.a.fn();\n\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br")])]),s("p",[n._v("这里为什么会打印 undefined 呢？这是因为正如刚刚所描述的那样，调用 fn 的是 a 对象，也就是说 fn 的内部的 this 是对象 a，而对象 a 中并没有对 name 进行定义，所以 log 的 this.name 的值是 undefined。\n这个例子还是说明了：this 永远指向最后调用它的那个对象，因为最后调用 fn 的对象是 a，所以就算 a 中没有 name 这个属性，也不会继续向上一个对象寻找 this.name，而是直接输出 undefined。")]),n._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[n._v("例 5(比较坑)")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('  var name = "windowsName";\n    var a = {\n        name : null,\n        // name: "Cherry",\n        fn : function () {\n            console.log(this.name);      // windowsName\n        }\n    }\n\n    var f = a.fn;\n    f();\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br")])]),s("p",[n._v("这里你可能会有疑问，为什么不是 Cherry，这是因为虽然将 a 对象的 fn 方法赋值给变量 f 了，但是没有调用，再接着跟我念这一句话：“this 永远指向最后调用它的那个对象”，由于刚刚的 f 并没有调用，所以 fn() 最后仍然是被 window 调用的。所以 this 指向的也就是 window。")]),n._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[n._v("例 6：")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("    var name = \"windowsName\";\n\n    function fn() {\n        var name = 'Cherry';\n        innerFunction();\n        function innerFunction() {\n            console.log(this.name);      // windowsName\n        }\n    }\n\n    fn()\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br")])]),s("h3",{attrs:{id:"怎么改变-this-指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么改变-this-指向"}},[n._v("#")]),n._v(" 怎么改变 this 指向")]),n._v(" "),s("ul",[s("li",[n._v("使用 ES6 的箭头函数")]),n._v(" "),s("li",[n._v("在函数内部使用 _this = this")]),n._v(" "),s("li",[n._v("使用 apply、call、bind")]),n._v(" "),s("li",[n._v("new 函数实例")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("fun.apply(thisArg, [argsArray])\nfun.call(thisArg[, arg1[, arg2[, ...]]])\n\nbind 是创建一个新的函数，我们必须要手动去调用：\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);