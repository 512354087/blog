(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{654:function(s,n,t){"use strict";t.r(n);var e=t(76),a=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"一篇文章搞懂-promise-的相关知识链与实现逻辑"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一篇文章搞懂-promise-的相关知识链与实现逻辑"}},[s._v("#")]),s._v(" 一篇文章搞懂 Promise 的相关知识链与实现逻辑")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/7002008722629197832",target:"_blank",rel:"noopener noreferrer"}},[s._v("一篇文章搞懂 Promise 的相关知识链与实现逻辑"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("微任务和宏任务")]),s._v(" "),n("p",[s._v("JS 执行时，V8 会创建一个全局执行上下文，在创建上下文的同时，V8 也会在内部创建一个微任务队列。")]),s._v(" "),n("p",[s._v("有微任务队列，自然就有宏任务队列，任务队列中的每一个任务则都称为宏任务，在当前宏任务执行过程中，如果有新的微任务产生，就添加到微任务队列中。")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("宏任务")]),s._v(" "),n("th",[s._v("微任务")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("渲染事件")]),s._v(" "),n("td",[s._v("Promise.[ then/catch/finally ]")])]),s._v(" "),n("tr",[n("td",[s._v("请求")]),s._v(" "),n("td",[s._v("proxy")])]),s._v(" "),n("tr",[n("td",[s._v("script 代码块")]),s._v(" "),n("td",[s._v("MutationObserver(监听 DOM)")])]),s._v(" "),n("tr",[n("td",[s._v("setTimeout")]),s._v(" "),n("td",[s._v("node 中的 process.nextTick")])]),s._v(" "),n("tr",[n("td",[s._v("setInterval")]),s._v(" "),n("td",[s._v("queueMicrotask")])]),s._v(" "),n("tr",[n("td",[s._v("Node 中的 setImmediate")]),s._v(" "),n("td",[s._v("async/await")])]),s._v(" "),n("tr",[n("td",[s._v("I/O")]),s._v(" "),n("td",[s._v("...")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  console.log(1)\n\tsetTimeout(()=>{ // 宏任务\n      console.log(2)\n  })\n  new Promise( resolve => {\n      setTimeout(()=>{ // 宏任务\n        console.log(3)\n      })\n      resolve(4) // 回调 是微任务\n      console.log(5)\n  }).then( num => {\n      console.log(num)\n  })\n  function a(){\n    console.log(6)\n  }\n  async function b(){\n    await a()\n    console.log(7)\n  }\n  b()\n  console.log(8)\n\n  // 1 5 6  8 7 4  2 3\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h2",{attrs:{id:"事件循环（event-loop）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事件循环（event-loop）"}},[s._v("#")]),s._v(" 事件循环（Event Loop）")]),s._v(" "),n("p",[s._v("事件循环：一句话概括就是入栈到出栈的循环\n即：一个宏任务，所有微任务，渲染，一个宏任务，所有微任务，渲染.....\n循环过程：\n所有同步任务都在主线程上依次执行，形成一个执行栈(调用栈)，异步任务处理完后则放入一个任务队列\n当执行栈中任务执行完，再去检查微任务队列里的微任务是否为空，有就执行，如果执行微任务过程中又遇到微任务，就添加到微任务队列末尾继续执行，把微任务全部执行完\n微任务执行完后，再到任务队列检查宏任务是否为空，有就取出最先进入队列的宏任务压入执行栈中执行其同步代码\n然后回到第 2 步执行该宏任务中的微任务，如此反复，直到宏任务也执行完，如此循环")]),s._v(" "),n("p",[s._v("script start async1 start  async2  promise1  script end  promise2  async1 end setTimeout")])])}),[],!1,null,null,null);n.default=a.exports}}]);