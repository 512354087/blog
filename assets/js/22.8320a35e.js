(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{658:function(t,e,r){"use strict";r.r(e);var a=r(76),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"regexp-对象的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regexp-对象的方法"}},[t._v("#")]),t._v(" RegExp 对象的方法")]),t._v(" "),e("ul",[e("li",[t._v("test() // 检测字符串是否匹配给定的正则表达式")]),t._v(" "),e("li",[t._v("exec() // 返回一个数组，数组的第一个元素是匹配的字符串，除了数组元素和 length 属性之外，exec() 方法还返回属性。index 属性声明的是匹配文本的第一个字符的位置。input 属性则存放的是被检索的字符串 string。 group 未匹配则返回为 null")]),t._v(" "),e("li",[t._v("compare() // 比较两个正则表达式，返回一个整数，如果两个正则表达式相等，返回 0，如果第一个正则表达式大于第二个正则表达式，返回 1，如果第一个正则表达式小于第二个正则表达式，返回 -1")])]),t._v(" "),e("h2",{attrs:{id:"regexp-的使用方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regexp-的使用方法"}},[t._v("#")]),t._v(" RegExp 的使用方法")]),t._v(" "),e("ul",[e("li",[t._v("search() // 检索字符串，返回位置，没有匹配则返回 -1")]),t._v(" "),e("li",[t._v("match() // 检索字符串，返回数组，没有匹配则返回 null")]),t._v(" "),e("li",[t._v("replace() // 替换字符串，返回新字符串，没有匹配则返回原字符串")])]),t._v(" "),e("h2",{attrs:{id:"generator-return-和-next-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generator-return-和-next-的区别"}},[t._v("#")]),t._v(" generator return 和 next() 的区别")]),t._v(" "),e("p",[t._v("next()方法主要用于在 Generator 函数的执行过程中进行控制和数据交换，而 return()方法则用于结束 Generator 函数的执行并返回一个值")]),t._v(" "),e("h2",{attrs:{id:"for-of-循环遍历的数据结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-of-循环遍历的数据结构"}},[t._v("#")]),t._v(" for of 循环遍历的数据结构")]),t._v(" "),e("p",[t._v("确认该数据结构是否具有 Symbol.iterator 属性，这个属性定义了对象的迭代器。\n数组、字符串、Map、Set、类数组对象")]),t._v(" "),e("h2",{attrs:{id:"闭包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),e("p",[t._v("在一个作用域中可以访问另一个函数内部的局部变量的函数。 在一个作用域中可以访问另一个函数内部的局部变量的函数。")]),t._v(" "),e("h2",{attrs:{id:"jsx-如何使用-fetch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsx-如何使用-fetch"}},[t._v("#")]),t._v(" jsx 如何使用 fetch")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  <h1>{fetch('https://api.github.com/users/octocat').then(res => res.json()).then(data => data.name)}\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("ul",[e("li",[e("p",[t._v("关于对象的扩展 错误的是对象的方法名不可以是表达式")])]),t._v(" "),e("li",[e("p",[t._v("box-sizing: content-box; 盒模型的宽度构成：content")])]),t._v(" "),e("li",[e("p",[t._v("box-sizing: border-box; 盒模型的宽度构成：content + padding + border")])]),t._v(" "),e("li",[e("p",[t._v("可以使用 npm link 解除依赖绑定")])]),t._v(" "),e("li",[e("p",[t._v("正则表达式 ^d+[^d]+ 能匹配下列哪个字符串? 匹配 d123")])]),t._v(" "),e("li",[e("p",[t._v("Object.freeze() 冻结对象属性 冻结后无法添加和删除已有属性的值 但是如果属性是引用类型则可以修改")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);