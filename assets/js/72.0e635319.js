(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{708:function(s,t,a){"use strict";a.r(t);var e=a(76),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"git-全局设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-全局设置"}},[s._v("#")]),s._v(" Git 全局设置")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('  git config --global user.name "[username]"\n  git config --global user.email "[email]"\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"命令行指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令行指令"}},[s._v("#")]),s._v(" 命令行指令")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("  * git init //初始化本地git环境\n  * git clone XXX//克隆一份代码到本地仓库\n  * git pull //把远程库的代码更新到工作台\n  * git pull --rebase origin master //强制把远程库的代码跟新到当前分支上面\n  * git fetch //把远程库的代码更新到本地库\n  * git add . //把本地的修改加到stage中\n  * git commit -m 'comments here' //把stage中的修改提交到本地库\n  * git push //把本地库的修改提交到远程库中\n  * git branch -r/-a //查看远程分支/全部分支\n  * git checkout master/branch //切换到某个分支\n  * git checkout -b test //新建test分支\n  * git checkout -d test //删除test分支\n  * git merge master //假设当前在test分支上面，把master分支上的修改同步到test分支上\n  * git merge tool //调用merge工具\n  * git stash //把未完成的修改缓存到栈容器中\n  * git stash list //查看所有的缓存\n  * git stash pop //恢复本地分支到缓存状态\n  * git blame someFile //查看某个文件的每一行的修改记录（）谁在什么时候修改的）\n  * git status //查看当前分支有哪些修改\n  * git log //查看当前分支上面的日志信息\n  * git diff //查看当前没有add的内容\n  * git diff --cache //查看已经add但是没有commit的内容\n  * git diff HEAD //上面两个内容的合并\n  * git reset --hard HEAD //撤销本地修改\n  * echo $HOME //查看git config的HOME路径\n  * export $HOME=/c/gitconfig //配置git config的HOME路径\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("h2",{attrs:{id:"git-解决冲突"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-解决冲突"}},[s._v("#")]),s._v(" Git 解决冲突")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("  先将本地修改存储起来  git stash\n  git stash list可以看到保存的信息\n  暂存了本地修改之后，就可以pull了  git pull\n  还原暂存的内容 git stash pop stash@{0}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"git-创建新版本库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-创建新版本库"}},[s._v("#")]),s._v(" Git 创建新版本库")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('  git clone git@git.bodata.cn:dongli/tzbl-wx.git\n  cd tzbl-wx\n  touch README.md\n  git add README.md\n  git commit -m "add README"\n  git push -u origin master\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"git-已存在的文件夹"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-已存在的文件夹"}},[s._v("#")]),s._v(" Git 已存在的文件夹")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('  cd existing_folder\n  git init\n  git remote add origin git@git.bodata.cn:dongli/tzbl-wx.git\n  git add .\n  git commit -m "Initial commit"\n  git push -u origin master\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"已存在的-git-版本库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#已存在的-git-版本库"}},[s._v("#")]),s._v(" 已存在的 Git 版本库")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("  cd existing_repo\n  git remote add origin git@git.bodata.cn:dongli/tzbl-wx.git\n  git push -u origin --all\n  git push -u origin --tags\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"git-如何切换远程仓库地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-如何切换远程仓库地址"}},[s._v("#")]),s._v(" Git 如何切换远程仓库地址")]),s._v(" "),t("ul",[t("li",[s._v("修改命令")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("  git remote set-url origin url\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("先删后加")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("  git remote rm origin\n  git remote add origin git@github.com:sheng/demo.git\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("切换分支")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('  git checkout -b branch origin/branch   git 切换分支到远程分支\n  git commit --amend //修改上次commit 内容\n  git merge --no-ff -m "merged bug fix 001" issue-001\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"git-撤销提交"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-撤销提交"}},[s._v("#")]),s._v(" Git 撤销提交")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git reset --soft HEAD^\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这样就成功的撤销了你的 commit\n注意，仅仅是撤回 commit 操作，您写的代码仍然保留。")]),s._v(" "),t("p",[s._v("说一下个人理解：\nHEAD^的意思是上一个版本，也可以写成 HEAD~1\n如果你进行了 2 次 commit，想都撤回，可以使用 HEAD~2")]),s._v(" "),t("h2",{attrs:{id:"git-撤销已经-push-的提交"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-撤销已经-push-的提交"}},[s._v("#")]),s._v(" Git 撤销已经 push 的提交")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("  git log查看提交信息，获取需要回退到的版本号\n  然后git reset --soft <版本号>\n  git reset --soft 6b418bf0840a9024f610609b320cf7bf4d24cbe4\n  再次git log确认一下：\n  本地已经撤回到“6b418bf0840a9024f610609b320cf7bf4d24cbe4”版本\n\n  强制推到远端\n  git push origin master --force强制提交当前版本号。\n  如果不加--force，会因为本地版本号低于远端仓库版本号而无法推送\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"git-cherry-pick"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-cherry-pick"}},[s._v("#")]),s._v(" git cherry-pick")]),s._v(" "),t("p",[s._v("git cherry-pick 命令的作用，就是将指定的提交（commit）应用于其他分支。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" git cherry-pick <commitHash>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面命令就会将指定的提交 commitHash，应用于当前分支。这会在当前分支产生一个新的提交，当然它们的哈希值会不一样。")]),s._v(" "),t("p",[s._v("举例来说，代码仓库有 master 和 feature 两个分支。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" a - b - c - d   Master\n         \\\n           e - f - g Feature\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("现在将提交 f 应用到 master 分支。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 切换到 master 分支\n$ git checkout master\n\n# Cherry pick 操作\n$ git cherry-pick f\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("上面的操作完成以后，代码库就变成了下面的样子。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    a - b - c - d - f   Master\n         \\\n           e - f - g Feature\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("从上面可以看到，master 分支的末尾增加了一个提交 f。")]),s._v(" "),t("p",[s._v("git cherry-pick 命令的参数，不一定是提交的哈希值，分支名也是可以的，表示转移该分支的最新提交。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git cherry-pick feature\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面代码表示将 feature 分支的最近一次提交，转移到当前分支。")])])}),[],!1,null,null,null);t.default=n.exports}}]);